requests
Python内置的urllib模块,用于访问网络资源.缺少很多实用的高级功能
requests,处理URL资源特别方便

实用requests
GET访问一个页面
requests_test.py
带参数的URL,传入一个dict作为params参数:
r = requests.get('https://www.douban.com/search', params={'q': 'python', 'cat': '1001'})
r.url   # 实际请求的url
requests自动检测编码,可以使用encoding属性查看
r.encoding
无论响应的是文本还是二进制内容,都可用于content属性模块获得bytes对象
r.content
对应特定类型的响应,例如JSON,可以直接获取:
r = requests.get('http://release.api.web.lrsp.beta.lrwanche.com/util/getwstoken?token=7d991bbfa473cc65c0f37e7df6a95832')
r.json()
传入HTTP Header时,传入一个dict作为headers参数:
r = requests.get('https://www.douban.com/', headers={'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit'})
r.text
发送POST请求,只需要把get()变成post(),然后传入data参数作为POST请求的数据:
r = requests.post('http://release.api.web.lrsp.beta.lrwanche.com/auth/login', data={'account': '13121907110','password': 'e10adc3949ba59abbe56e057f20f883e'})
requests默认使用application/x-www-form-urlencoded对POST数据编码.
如果要传递JSON数据,可以直接传入json参数:
params = {'key': 'value'}
r = requests.post(url, json=params)# 内部自动序列化为JSON
上传文件需要更复杂的编码格式,但是requests把它简化成files参数:
upload_files = {'file': open('report.xls', 'rb')}
r = requests.post(url, files=upload_files)
在读取文件时,请务必使用'rb'即二进制模式读取,这样获取的bytes长度才是文件的长度.
把post()方法替换为put(),delete()等,就可以以PUT或DELETE方式请求资源.
requests对获取HTTP响应的其他信息也非常简单.
例如,获取响应头:
r.headers
r.headers['Content-Type']
requests对Cookie做了特殊处理,我们不必解析Cookie就可以轻松获取指定的Cookie:
r.cookies['ts']
要在请求中传入Cookie,准备一个dict传入cookies参数:
cs = {'token': '12345', 'status': 'working'}
r = requests.get(url, cookies=cs)
指定超时,传入以秒为单位的timeout参数:
r = requests.get(url, timeout=2.5) # 2.5秒后超时

小结:
用requests获取URL资源,就是这么简单