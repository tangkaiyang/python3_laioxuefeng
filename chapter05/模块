模块
为了编写可维护的代码,我们把很多函数分组,分别放到不同的文件里,这样,每个文件包含的代码就相对较少,很多编程语言都采用这种组织代码的方式.在Python中,一个.py文件就称之为一个模块(Module)
使用模块还可以避免函数名和变量名冲突.相同名字的函数和变量完全可以分别存在不同的模块中,尽量不要与内置函数名字冲突
避免模块名冲突,Python引入了按目录来组织模块的方法,称为包(Package)
从顶层报名开始引用
注意,每个包目录下面都会有一个__init__.py的文件,
!自己创建模块时要注意命名,不能和Python自带的模块名称冲突

总结
模块是一组python代码的集合,可以使用其他模块,也可以被其他模块使用
创建自己的模块时,要注意:
模块名要遵循Python变量命名规范,不要使用中文,特殊字符
模块名不要和系统模块名冲突,最好先查看系统是否已存在该模块,检查方法是python交互环境执行import abc,若成功则说明系统存在此模块

使用模块
作用域
通过前缀_实现函数和变量仅仅在模块内部使用
正常的函数和变量名是公开的(public)
类似__xxx__这样的变量是特殊变量,可以被直接引用,如__doc__访问模块的文档注释
类似_x和__x这样的函数和变量是非公开的(private),不应该被直接引用

安装第三方模块
pip安装
使用Anoconda

模块搜索路径
默认情况下,Python解释器会搜索当前目录,所有已安装的内置模块和第三方模块,搜索路径存放在sys模块的path变量中
如果要添加自己的搜索目录
一是直接修改sys.path,添加要搜索的目录:
import sys --> sys.path.append('....')
这种方法是在运行时修改,运行结束后失效
二是设置环境变量PYTHONPATH,该环境变量的内容会自动添加到模块搜索路径中.设置方式与设置Path环境变量类似.注意只需要添加自己的搜索路径,Python自己本身的搜索路径不受影响