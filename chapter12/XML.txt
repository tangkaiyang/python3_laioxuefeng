XML
XML虽然比JSON复杂,在Web应用也不如以前多了,不过仍有很多地方在用,所以,有必要了解如何操作XML

DOM vs SAX
操作XML有两种方法:DOM和SAX.DOM会把整个XML读入内存,解析为树,因为占用内存过大,解析慢,
优点是可以任意便利树对节点.SAX是流模式,边读边解析,占用内存小,解析快,缺点是我们需要自己
处理事件.
正常情况下,有限考虑SAX,因为DOM实在太占内存.
在Python中使用SAX解析XML非常简洁,通常我们关心的事件是
start_element, end_element和char_data,准备好这三个函数,就可以解析XML了
例:当SAX解析器读到一个节点时:
<a href="/">python</a>
会产生三个事件:
1.start_element事件,在读取<a href="/">时;
2.char_data事件,在读取python时;
3.end_element事件,在读取</a>时.
python_xml.py

需要注意的是读取一大段字符串时,CharacterDataHandler可能被多次调用,所以需要自己保存起来,
在EndElementHandler里面在合并.
除了解析XML外,如何生成XML呢?99%的情况下需要生成的XML结构都是非常简单的,因此,最简单也
是最有效的生成XML的方法是拼接字符串
L = []
L.append(r'<?xml version="1.0"?>')
L.append(r'<root>')
L.append(encode('some & data'))
L.append(r'</root>')
return ''.join(L)
如果要生成复杂的XML呢?建议改成JSON

小结
解析XML时,注意找出自己感兴趣的节点,响应事件时,把节点数据保存起来.解析完毕后,就可以
处理数据.

